<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Address</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/styles/add-address.css">
</head>
<body>

<!-- Navbar with Hamburger Menu -->
<nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm">
    <div class="container">
        <a class="navbar-brand fw-bold" href="profile">User Profile</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto">
                <li class="nav-item">
                    <a class="nav-link " href="profile">My Profile</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="profile">My Orders</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" href="profile">My Addresses</a>
                </li>
                <!-- <li class="nav-item">
                    <a class="nav-link" href="#">Mb Cash</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Saved Cards</a>
                </li> -->
            </ul>
        </div>
    </div>
</nav>

<!-- Address Form -->
<div class="container">
    <div class="address-card mx-auto">
        <h2 class="fw-bold mb-4">Add New Address</h2>
        <form id="addressForm">
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="fullName" class="form-label">Full Name</label>
                        <input type="text" class="form-control" id="fullName" name="name" placeholder="Enter your full name" >
                        <small class="error-message" id="nameError"></small>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="phone" class="form-label">Phone Number</label>
                        <input type="tel" class="form-control" id="phone" name="phone" placeholder="Enter your phone number" >
                        <small class="error-message" id="phoneError"></small>
                    </div>
                </div>
            </div>
            <div class="mb-3">
                <label for="address" class="form-label">Address</label>
                <textarea class="form-control" id="address" name="addressType" placeholder="Enter your address" rows="3" ></textarea>
                <small class="error-message" id="addressError"></small>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="city" class="form-label">City</label>
                        <input type="text" class="form-control" id="city" name="city" placeholder="Enter your city" >
                        <small class="error-message" id="cityError"></small>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="state" class="form-label">State</label>
                        <input type="text" class="form-control" id="state" name="state" placeholder="Enter your state" >
                        <small class="error-message" id="stateError"></small>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="landmark" class="form-label">Landmark</label>
                        <input type="text" class="form-control" id="landmark" name="landmark" placeholder="Enter a nearby landmark" >
                        <small class="error-message" id="landmarkError"></small>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label for="pincode" class="form-label">Pincode</label>
                        <input type="text" class="form-control" id="pincode" name="pincode" placeholder="Enter your pincode" >
                        <small class="error-message" id="pincodeError"></small>
                    </div>
                </div>
            </div>
            <div class="mb-3">
                <label for="altPhone" class="form-label">Alternative Phone Number</label>
                <input type="tel" class="form-control" id="altPhone" name="altPhone" placeholder="Enter your alternative phone number" >
                <small class="error-message" id="altPhoneError"></small>
            </div>
            <button type="submit" class="btn btn-save">Save Address</button>
        </form>
    </div>
</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.getElementById('addressForm').addEventListener('submit', async function (event) {
        event.preventDefault();

        // Get input values
        const fullName = document.getElementById('fullName').value;
        const phone = document.getElementById('phone').value;
        const address = document.getElementById('address').value;
        const city = document.getElementById('city').value;
        const state = document.getElementById('state').value;
        const landmark = document.getElementById('landmark').value;
        const pincode = document.getElementById('pincode').value;
        const altPhone = document.getElementById('altPhone').value;

        let valid = true;

        // Regular Expressions for validation
        const nameRegex = /^[A-Za-z\s]+$/;
        const phoneRegex = /^\+?[0-9]{10}$/;
        const cityStateRegex = /^[A-Za-z\s]+$/;
        const landmarkRegex = /^[A-Za-z0-9\s]+$/;
        const pincodeRegex = /^[0-9]{6}$/;

        // Name validation
        if (!nameRegex.test(fullName)) {
            valid = false;
            document.getElementById('nameError').textContent = "Name can only contain letters and spaces.";
        } else {
            document.getElementById('nameError').textContent = "";
        }

        // Phone validation
        if (!phoneRegex.test(phone)) {
            valid = false;
            document.getElementById('phoneError').textContent = "Phone number must be a valid 10-digit number.";
        } else {
            document.getElementById('phoneError').textContent = "";
        }

        // Address validation
        if (address.trim() === "") {
            valid = false;
            document.getElementById('addressError').textContent = "Address cannot be empty.";
        } else {
            document.getElementById('addressError').textContent = "";
        }

        // City validation
        if (!cityStateRegex.test(city)) {
            valid = false;
            document.getElementById('cityError').textContent = "City must contain only letters.";
        } else {
            document.getElementById('cityError').textContent = "";
        }

        // State validation
        if (!cityStateRegex.test(state)) {
            valid = false;
            document.getElementById('stateError').textContent = "State must contain only letters.";
        } else {
            document.getElementById('stateError').textContent = "";
        }

        // Landmark validation
        if (!landmarkRegex.test(landmark)) {
            valid = false;
            document.getElementById('landmarkError').textContent = "Landmark must contain only letters, numbers, and spaces.";
        } else {
            document.getElementById('landmarkError').textContent = "";
        }

        // Pincode validation
        if (!pincodeRegex.test(pincode)) {
            valid = false;
            document.getElementById('pincodeError').textContent = "Pincode must be a valid 6-digit number.";
        } else {
            document.getElementById('pincodeError').textContent = "";
        }

        // Alternative phone validation
        if (!phoneRegex.test(altPhone)) {
            valid = false;
            document.getElementById('altPhoneError').textContent = "Alternative phone number must be a valid 10-digit number.";
        } else if (altPhone === phone) {
            valid = false;
            document.getElementById('altPhoneError').textContent = "Alternative phone number must not match the phone number.";
        } else {
            document.getElementById('altPhoneError').textContent = "";
        }

        // If the form is invalid, exit
        if (!valid) return;

        // Submit the form data using fetch
        try {
            const response = await fetch('/addaddress', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    name: fullName,
                    phone: phone,
                    addressType: address,
                    city: city,
                    state: state,
                    landMark: landmark,
                    pincode: pincode,
                    altPhone: altPhone,
                }),
            });

            const result = await response.json();

            if (response.ok) {
                // Display success message
                Swal.fire({
                    icon: 'success',
                    title: 'Address Saved',
                    text: 'Your address has been successfully saved!',
                });
                // Clear the form
                document.getElementById('addressForm').reset();
            } else {
                // Display error message from server
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: result.message || 'Something went wrong!',
                });
            }
        } catch (error) {
            // Handle fetch error
            Swal.fire({
                icon: 'error',
                title: 'Network Error',
                text: error,
            });
        }
    });
</script>

</body>
</html>
