<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login Page</title>
  <link rel="stylesheet" href="/styles/login.css">
</head>
<body>
  <div class="container">
    <div class="image-section">
    </div>
    <div class="login-section">
      <h2>Welcome Back</h2>
      <form action="/login" method="POST" class="login-form" id="loginForm" novalidate>
        <div class="form-group">
          <label for="email">Email</label>
          <input type="email" id="email" name="email" placeholder="Enter your email" required>
          <div id="emailError" class="error-message"></div>
        </div>
        <div class="form-group">
          <label for="password">Password</label>
          <input type="password" id="password" name="password" placeholder="Enter your password" required>
          <div id="passwordError" class="error-message"></div>
        </div>
        <div class="form-group d-flex justify-content-end">
          <a href="/forgot-password" class="forgot-password-link ms-auto">Forgot Password</a>
        </div>
        
        <% if(locals.message && message.length > 0) { %>
          <div class="alert alert-danger text-center">
            <%= message %>
          </div>
        <% } %>

        <button type="submit" class="btn">Login</button>
        <div class="divider">or</div>
        <a href="/auth/google" class="google-btn">
          <img src="images/icon.jpg" alt="Google Icon">
          Sign up with Google
        </a>
      </form>
      <p class="register-text">
        Not registered? <a href="/signup">Signup</a>
      </p>
    </div>
  </div>

  <script src="/js/login-validation.js"></script>
</body>
</html>
<script>
document.addEventListener("DOMContentLoaded", function () {
  const loginForm = document.getElementById("loginForm");
  const emailInput = document.getElementById("email");
  const passwordInput = document.getElementById("password");
  const emailError = document.getElementById("emailError");
  const passwordError = document.getElementById("passwordError");

  function validateEmail(email) {
    const emailPattern = /^[a-zA-Z0-9._-]+@([a-zA-Z0-9.-]+)\.([a-zA-Z]{2,4})$/;
    return emailPattern.test(email);
  }

  function showError(element, message) {
    element.textContent = message;
    element.style.display = "block";
  }

  function clearError(element) {
    element.textContent = "";
    element.style.display = "none";
  }

  function validateForm(e) {
    let isValid = true;

    // Email validation
    if (!emailInput.value.trim()) {
      showError(emailError, "Email is required");
      isValid = false;
    } else if (!validateEmail(emailInput.value)) {
      showError(emailError, "Invalid email format");
      isValid = false;
    } else {
      clearError(emailError);
    }

    // Password validation
    if (!passwordInput.value) {
      showError(passwordError, "Password is required");
      isValid = false;
    } else if (passwordInput.value.length < 8) {
      showError(passwordError, "Password should be at least 8 characters long");
      isValid = false;
    } else {
      clearError(passwordError);
    }

    if (!isValid) {
      e.preventDefault();
    }
  }

  loginForm.addEventListener("submit", validateForm);

  // Real-time validation
  emailInput.addEventListener("input", function() {
    if (this.value && !validateEmail(this.value)) {
      showError(emailError, "Invalid email format");
    } else {
      clearError(emailError);
    }
  });

  passwordInput.addEventListener("input", function() {
    if (this.value && this.value.length < 8) {
      showError(passwordError, "Password should be at least 8 characters long");
    } else {
      clearError(passwordError);
    }
  });
});

</script>