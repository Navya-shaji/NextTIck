<%- include("../../views/partials/user/header") %>

  <head>
    <link rel="stylesheet" href="/styles/shop-page.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
  </head>

  <div class="main-container">
    <section class="shop-page">
      <div class="shop-topbar">
        <div class="search-container">
          <form action="/shop" method="GET" class="search-form" id="searchForm">
            <input type="text" name="query" placeholder="Search items..." class="search-input" id="searchInput"
              value="<%= query.query || '' %>" />
            <% if (query.sort) { %>
              <input type="hidden" name="sort" value="<%= query.sort %>">
            <% } %>
            <% if (query.category) { %>
              <input type="hidden" name="category" value="<%= query.category %>">
            <% } %>
            <button type="submit" class="search-button">Search</button>
            <button type="button" class="clear-button" onclick="clearSearch()">Clear</button>
          </form>
        </div>
      </div>
      <div class="product-list-container">
        <aside class="sidebar">
          <!-- Categories Dropdown -->
          <div class="filter-section">
            <div class="filter-title" onclick="toggleDropdown('categoryDropdown')">
              Categories
              <span class="dropdown-arrow">⬇</span>
            </div>

            <div id="categoryDropdown" class="category-brand-container dropdown-content">
              <ul>
                <% categories.forEach(function(category) { %>
                  <li class="filter-item">
                    <a href="/shop?category=<%= category._id %>"
                      class="<%= query.category === category._id.toString() ? 'active' : '' %>">
                      <%= category.name %>
                    </a>
                  </li>
                  <% }); %>
              </ul>
              <!-- Clear category filter link/button -->
              <% if (query.category) { %>
                <div class="clear-category">
                  <a href="/shop" class="clear-category-link">
                    Clear <span class="clear-arrow">⬅</span> <!-- You can replace the arrow with any icon you like -->
                  </a>
                </div>
                <% } %>
            </div>
          </div>
<!-- 
          <div class="filter-section">
            <div class="filter-title" onclick="toggleDropdown('brandDropdown')">
              Brands
              <span class="dropdown-arrow">⬇</span>
            </div>
          
            <div id="brandDropdown" class="category-brand-container dropdown-content">
              <ul>
                <% brands.forEach(function(brand) { %>
                  <li class="filter-item">
                    <a href="/shop?brand=<%= brand._id %>"
                       class="<%= query.brand === brand._id.toString() ? 'active' : '' %>">
                      <%= brand.brandName %>
                    </a>
                  </li>
                <% }); %>
              </ul>
              <% if (query.brand) { %>
                <div class="clear-category">
                  <a href="/shop" class="clear-category-link">
                    Clear <span class="clear-arrow">⬅</span>
                  </a>
                </div>
              <% } %>
            </div>
          </div>
          
             -->



            <div class="filter-section">
              <!-- <div class="filter-title" style="color: black;">Availability</div> -->
              <label>
                <!-- <input type="checkbox" name="inStock" value="true" <%= query.inStock === 'true' ? 'checked' : '' %>> In Stock Only -->
              </label>
            </div>
        </aside>

        <main class="product-content">
          <div class="sort-options">
            <div class="sorting">
              <form method="GET" action="/shop" class="sort-form" id="sortForm">
                <% if (query.query) { %>
                  <input type="hidden" name="query" value="<%= query.query %>">
                <% } %>
                <% if (query.category) { %>
                  <input type="hidden" name="category" value="<%= query.category %>">
                <% } %>
                
                <label for="sort">Sort By:</label>
                <select name="sort" id="sort" onchange="document.getElementById('sortForm').submit()">
                  <option value="newest" <%=!query.sort || query.sort==='newest' ? 'selected' : '' %>>Default</option>
                  <option value="popularity" <%=query.sort==='popularity' ? 'selected' : '' %>>Popularity</option>
                  <option value="price_asc" <%=query.sort==='price_asc' ? 'selected' : '' %>>Price: Low to High</option>
                  <option value="price_desc" <%=query.sort==='price_desc' ? 'selected' : '' %>>Price: High to Low</option>
                  <option value="name_asc" <%=query.sort==='name_asc' ? 'selected' : '' %>>Name: A to Z</option>
                  <option value="name_desc" <%=query.sort==='name_desc' ? 'selected' : '' %>>Name: Z to A</option>
                </select>
              </form>
            </div>

                      <!-- In your product grid section -->
                      <div class="product-grid">
                        <% products.forEach(function(product) { %>
                          <div class="product-card">
                            <div class="quick-view-btn" onclick="window.location.href='/productDetails?id=<%= product._id %>'">
                              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                                <circle cx="12" cy="12" r="3"></circle>
                              </svg>
                            </div>
                            <span class="wishlist-btn" onclick="addToWishlist('<%= product._id %>', this)">
                              <i class="<%= wishlistItems.includes(product._id.toString()) ? 'fa-solid' : 'fa-regular' %> fa-heart"></i>
                            </span>
                            <img src="/uploads/re-image/<%= product.productImage[0] %>"
                              alt="<%= product.productName %>" />
                            <h4>
                              <%= product.productName %>
                            </h4>
                            
                            </p>
                            <span>
                              <%= product.category.name %>
                            </span>
                            <p>Price: ₹
                              <% if (product.salePrice && product.salePrice < product.regularPrice) { %>
                                <%= product.salePrice.toLocaleString('en-IN') %>
                                  <span class="text-muted">
                                    <strike>₹<%= product.regularPrice.toLocaleString('en-IN') %></strike>
                                  </span>
                                  <% } else { %>
                                    <%= product.regularPrice.toLocaleString('en-IN') %>
                                      <% } %>
                            </p>
                      
                            <p>In Stock: <%= product.quantity %>
                              <br>
                            </p>
                            <br>
                            <button class="add-to-cart-btn" onclick="addToCartHandler(event, '<%= product._id %>')"
                              <%=product.quantity> 0 ? '' : 'disabled' %>>
                              <%= product.quantity> 0 ? 'Add to Cart' : 'Out of Stock' %>
                            </button>
                            <br>
                          </div>
                          <% }); %>
                      </div>

                      <!-- Pagination section -->
                      <div class="pagination">
                        <% if (totalPages> 1) { %>
                          <% const pageRange=2; const startPage=Math.max(1, currentPage - pageRange); const
                            endPage=Math.min(totalPages, currentPage + pageRange); %>

                            <% if (currentPage> 1) { %>
                              <button onclick="changePage(<%= currentPage - 1 %>)">Previous</button>
                              <% } %>

                                <% if (startPage> 1) { %>
                                  <button onclick="changePage(1)">1</button>
                                  <% if (startPage> 2) { %>
                                    <span>...</span>
                                    <% } %>
                                      <% } %>

                                        <% for(let i=startPage; i <=endPage; i++) { %>
                                          <button onclick="changePage(<%= i %>)"
                                            class="<%= currentPage === i ? 'active' : '' %>">
                                            <%= i %>
                                          </button>
                                          <% } %>

                                            <% if (endPage < totalPages) { %>
                                              <% if (endPage < totalPages - 1) { %>
                                                <span>...</span>
                                                <% } %>
                                                  <button onclick="changePage(<%= totalPages %>)">
                                                    <%= totalPages %>
                                                  </button>
                                                  <% } %>

                                                    <% if (currentPage < totalPages) { %>
                                                      <button
                                                        onclick="changePage(<%= currentPage + 1 %>)">Next</button>
                                                      <% } %>
                                                        <% } %>
                      </div>


                      <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
                      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

                      <script>
                        function changePage(page) {
                          const currentUrl = new URL(window.location.href);
                          currentUrl.searchParams.set('page', page);

                          window.location.href = currentUrl.toString();
                        }

                        function clearSearch() {
                          const searchInput = document.getElementById('searchInput');
                          searchInput.value = '';

                          const currentUrl = new URL(window.location.href);
                          currentUrl.searchParams.delete('query');
                          currentUrl.searchParams.delete('page'); // Reset to first page

                          window.location.href = currentUrl.toString();
                        }


                        function addToCartHandler(event, productId) {
                          event.preventDefault();

                          fetch('/addToCart', {
                            method: 'POST',
                            headers: {
                              'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                              productId: productId,
                              quantity: 1
                            })
                          })
                            .then(response => {
                              console.log(response)
                              if (!response.ok) {
                                return response.json().then(data => {
                                  throw new Error(data.message || 'Failed to add product to cart');
                                });
                              }
                              return response.json();
                            })
                            .then(data => {
                              if (data.success) {
                                Swal.fire({
                                  title: 'Success!',
                                  text: data.message || 'Product added to cart successfully!',
                                  icon: 'success',
                                  showConfirmButton: false,
                                  timer: 1500
                                }).then(() => {
                                  if (data.cartCount !== undefined) {
                                    updateCartCount(data.cartCount);
                                  }

                                  if (data.redirect) {
                                    window.location.href = data.redirect;
                                  }
                                });
                              } else {
                                throw new Error(data.message || 'Failed to add product to cart');
                              }
                            })
                            .catch(error => {
                              console.error('Error:', error);

                              if (error.message.includes('Please login')) {
                                Swal.fire({
                                  title: 'Login Required',
                                  text: 'Please login to add items to your cart',
                                  icon: 'info',
                                  showCancelButton: true,
                                  confirmButtonText: 'Login',
                                  cancelButtonText: 'Cancel'
                                }).then((result) => {
                                  if (result.isConfirmed) {
                                    window.location.href = '/login';
                                  }
                                });
                              }
                              else if (error.message.includes('Maximum quantity')) {
                                Swal.fire({
                                  title: 'Quantity Limit Reached',
                                  text: error.message,
                                  icon: 'warning',
                                  confirmButtonText: 'OK'
                                });
                              }
                              else if (error.message.includes('out of stock') || error.message.includes('available in stock')) {
                                Swal.fire({
                                  title: 'Stock Limited',
                                  text: error.message,
                                  icon: 'warning',
                                  confirmButtonText: 'OK'
                                });
                              }
                              else {
                                Swal.fire({
                                  title: 'Error!',
                                  text: error.message || 'Something went wrong. Please try again.',
                                  icon: 'error',
                                  confirmButtonText: 'OK'
                                });
                              }
                            });
                        }

                        function addToWishlist(productId, element) {
                          const icon = element.querySelector('i');
                          
                          $.ajax({
                            url: "/addToWishlist",
                            method: "POST",
                            data: {
                              productId: productId
                            },
                            success: (response) => {
                              if (response.success) {
                                if (response.action === 'added') {
                                  icon.classList.remove('fa-regular');
                                  icon.classList.add('fa-solid');
                                  Swal.fire({
                                    title: "Added to wishlist",
                                    text: response.message,
                                    icon: "success",
                                    timer: 2000,
                                  });
                                } else {
                                  icon.classList.remove('fa-solid');
                                  icon.classList.add('fa-regular');
                                  Swal.fire({
                                    title: "Removed from wishlist",
                                    text: response.message,
                                    icon: "info",
                                    timer: 2000,
                                  });
                                }
                              } else {
                                if (response.redirect) {
                                  window.location.href = response.redirect;
                                } else {
                                  Swal.fire({
                                    title: "Error",
                                    text: response.message,
                                    icon: "error",
                                    timer: 2000,
                                  });
                                }
                              }
                            },
                            error: (xhr, status, error) => {
                              console.error("AJAX Error: ", error, xhr.responseText);
                              Swal.fire({
                                title: "Error",
                                text: "There was an error updating your wishlist. Please try again.",
                                icon: "error",
                                timer: 2000,
                              });
                            },
                          });
                        }

                        document.getElementById('sort').addEventListener('change', function () {
                          const currentUrl = new URL(window.location.href);
                          currentUrl.searchParams.set('sort', this.value);
                          window.location.href = currentUrl.toString();
                        });

                        document.querySelector('input[name="inStock"]').addEventListener('change', function () {
                          const currentUrl = new URL(window.location.href);
                          if (this.checked) {
                            currentUrl.searchParams.set('inStock', 'true');
                          } else {
                            currentUrl.searchParams.delete('inStock');
                          }
                          window.location.href = currentUrl.toString();
                        });

                        function toggleDropdown(id) {
                          const dropdown = document.getElementById(id);
                          dropdown.classList.toggle('show');

                          const arrow = dropdown.previousElementSibling.querySelector('.dropdown-arrow');
                          if (dropdown.classList.contains('show')) {
                            arrow.style.transform = 'rotate(180deg)';
                          } else {
                            arrow.style.transform = 'rotate(0deg)';
                          }
                        }
                        function toggleDropdown(dropdownId) {
                          var dropdown = document.getElementById(dropdownId);
                          dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
                        }


                        
                      </script>
        </main>
      </div>
    </section>
  </div>

  <style>
    .search-container {
      display: flex;
      align-items: center;
      margin-bottom: 20px;
      max-width: 400px;
    }

    .search-form {
      display: flex;
      gap: 10px;
      width: 100%;
    }

    .search-input {
      width: 250px;
      padding: 8px;
      border: 1px solid #ddd;
      border-radius: 4px;
    }

    .search-button, .clear-button {
      padding: 8px 15px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .search-button {
      background-color: #007bff;
      color: white;
    }

    .clear-button {
      background-color: #6c757d;
      color: white;
    }

  

    .filter-title {
      font-weight: bold;
      padding: 10px;
      cursor: pointer;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .category-brand-container {
      padding: 10px;
    }

    .category-brand-container ul {
      list-style: none;
      padding: 0;
      margin: 0;
      max-height: none;
      overflow: visible;
    }

    .category-brand-container li {
      margin: 8px 0;
    }

    .category-brand-container a {
      color: #333;
      text-decoration: none;
      display: block;
      padding: 5px;
      transition: background-color 0.2s;
    }

    .category-brand-container a:hover {
      background-color: #f8f9fa;
    }

    .category-brand-container a.active {
      background-color: #e9ecef;
      font-weight: bold;
    }

    .clear-category {
      margin-top: 10px;
      padding-top: 10px;
      border-top: 1px solid #ddd;
    }

    .clear-category-link {
      color: #dc3545;
      text-decoration: none;
      font-size: 0.9em;
    }
  </style>

  <script>
    function clearSearch() {
      // Preserve sort and category parameters
      const urlParams = new URLSearchParams(window.location.search);
      const sort = urlParams.get('sort');
      const category = urlParams.get('category');
      
      let newUrl = '/shop?';
      if (sort) newUrl += sort=${sort}&;
      if (category) newUrl += category=${category};
      
      window.location.href = newUrl.endsWith('?') ? newUrl.slice(0, -1) : newUrl;
    }

    function changePage(page) {
      // Preserve all current parameters and just update the page
      const urlParams = new URLSearchParams(window.location.search);
      urlParams.set('page', page);
      window.location.href = /shop?${urlParams.toString()};
    }

    function toggleDropdown(id) {
      const dropdown = document.getElementById(id);
      dropdown.style.display = dropdown.style.display === 'none' ? 'block' : 'none';
    }
  </script>

  <%- include("../../views/partials/user/footer.ejs") %>