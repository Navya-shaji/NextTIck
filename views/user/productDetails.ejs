<%- include("../../views/partials/user/header.ejs") %>


<style>
    .ProductContainer {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        margin-top: 5%;
        display: flex;
        flex-direction: column;
        gap: 30px;
    }

    .product-detail {
        display: flex;
        flex-wrap: wrap;
        gap: 40px;
        align-items: flex-start;
    }

    .product-images {
        flex: 1;
        min-width: 300px;
        max-width: 50%;
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .main-image-container {
        position: relative;
        overflow: hidden;
        width: 100%;
        padding-top: 100%; 
        border-radius: 8px;
        border: 1px solid #ddd;
        background-color: #f8f9fa;
    }

    .main-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 8px;
    }

    .thumbnail-strip {
        display: flex;
        gap: 10px;
        overflow-x: auto;
        padding-bottom: 10px;
    }

    .thumbnail {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 4px;
        cursor: pointer;
        border: 2px solid transparent;
        transition: border-color 0.3s ease;
    }

    .thumbnail.active {
        border-color: #007bff;
    }

    .product-info {
        flex: 1;
        min-width: 300px;
        max-width: 50%;
    }

    h1 {
        font-size: 28px;
        margin-bottom: 15px;
        color: #333;
    }

    .rating {
        color: #ffc107;
        font-size: 18px;
        margin-bottom: 10px;
    }

    .price {
        font-size: 28px;
        font-weight: bold;
        color: #007bff;
        margin: 15px 0;
        display: flex;
        align-items: center;
    }

    .old-price {
        text-decoration: line-through;
        color: #6c757d;
        font-size: 18px;
        margin-left: 10px;
    }

    .quantity {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 20px;
    }

    .quantity button {
        background-color: #f8f9fa;
        border: 1px solid #ced4da;
        padding: 8px 12px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 4px;
        transition: background-color 0.3s ease;
    }

    .quantity button:hover {
        background-color: #e9ecef;
    }

    .quantity span {
        padding: 8px 15px;
        border: 1px solid #ced4da;
        font-size: 16px;
        font-weight: bold;
        text-align: center;
    }

    .add-to-cart {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 12px 25px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 4px;
        transition: background-color 0.3s ease;
        margin-top: 15px;
    }

    .add-to-cart:hover {
        background-color: #0056b3;
    }

    .product-meta {
        margin-top: 25px;
        font-size: 14px;
        color: #6c757d;
        line-height: 1.6;
    }

    @media (max-width: 768px) {
        .product-detail {
            flex-direction: column;
            align-items: center;
        }

        .product-images, .product-info {
            max-width: 100%;
        }

        h1 {
            text-align: center;
        }

        .price {
            justify-content: center;
        }

        .add-to-cart {
            display: block;
            width: 100%;
            text-align: center;
        }
    }
    .related-products {
  margin: 40px 0;
  text-align: center;
}

.related-products h1 {
  font-size: 28px;
  font-weight: bold;
  margin-bottom: 20px;
}

.related-products .product-list {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 20px;
}

.single-product-item {
  width: 100%;
  max-width: 250px;
  background: #f9f9f9;
  border: 1px solid #ddd;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.single-product-item:hover {
  transform: translateY(-5px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.single-product-item figure {
  position: relative;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

.single-product-item figure img {
  width: 100%;
  height: auto;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.single-product-item figure:hover img {
  transform: scale(1.05);
}

.single-product-item .p-status {
  position: absolute;
  top: 10px;
  left: 10px;
  background: #ff4d4f;
  color: #fff;
  font-size: 12px;
  font-weight: bold;
  padding: 5px 10px;
  border-radius: 5px;
  text-transform: uppercase;
}

.product-text {
  padding: 15px;
  text-align: center;
}

.product-text h6 {
  font-size: 16px;
  font-weight: bold;
  margin: 10px 0;
}

.product-text p {
  font-size: 14px;
  color: #555;
  margin: 0;
}

@media (max-width: 768px) {
  .single-product-item {
    max-width: 200px;
  }
}

@media (max-width: 576px) {
  .single-product-item {
    max-width: 150px;
  }
}
.product-offer-box {
    display: inline-block;
    background-color: red;
    color: white;
    font-size: 12px;
    font-weight: bold;
    padding: 2px 6px; 
    border-radius: 4px; 
    text-align: center;
    margin-left: 10px; 
}
.product-offer-box-two {
    display: inline-block;
    padding: 5px 10px;
    font-size: 14px;
    font-weight: bold;
    color: #ffffff;
    background-color: #ff5722; /* A vibrant color like orange */
    border-radius: 5px; /* Rounded corners */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Add a subtle shadow */
    text-align: center; /* Center the text */
    text-transform: uppercase; /* Convert text to uppercase */
    margin-top: 0px;
}

.product-offer-box-two {
    display: inline-block;
    padding: 8px 15px;
    font-size: 14px;
    font-weight: bold;
    color: #ffffff; /* Text color: White */
    background-color: #343a40; /* Background color: Dark Gray */
    border-radius: 8px; /* Rounded corners */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2); /* Subtle shadow for a 3D effect */
    text-align: center; /* Center the text */
    margin: 5px; /* Add spacing around the span */
    text-transform: capitalize; /* Capitalize first letter of each word */
    transition: transform 0.2s ease, background-color 0.2s ease; /* Smooth transition effects */
}

.product-offer-box-two:hover {
    background-color: #495057; /* Slightly lighter gray on hover */
    transform: scale(1.05); /* Enlarge slightly on hover */
}


</style>

    <div class="ProductContainer">
        <div class="product-detail">
            <div class="product-images">
                <div class="main-image-container" onmousemove="zoomImage(event)" onmouseleave="resetZoom(event)">
                    <img id="mainImage" src="/uploads/re-image/<%=product.productImage[0]%>" alt="Product Image" class="main-image" onmouseleave="resetZoom(event)" >
                </div>
                <div class="thumbnail-strip">
                    <%for(let i=0;i<product.productImage.length;i++){%>
                        <div>
                            <img src="/uploads/re-image/<%=product.productImage[i]%>"  alt="Product Thumbnail 1" class="thumbnail active" onclick="changeImage(this)">
                        </div>

                   <%}%>
                 
                </div>
            </div>
            <div class="product-info">
                <h1><%=product.productName%></h1>
                <div class="rating">
                    ★★★★☆ <span style="color: #6c757d; font-size: 14px;">(25 reviews)</span>
                    <!-- <span class="product-offer-box-two">categoryOffer:<%=category.categoryOffer%> %Offer</span> -->

                    <div class="product-meta">
                        <span class="wishlist-btn" onclick="addToWishlist('<%= product._id %>')">❤️</span>

                         
                        </div>
                </div>

                <p><%=product.brand%></p>
                <p><%=product.description%></p>
                <div class="price">
                    <%=product.salesPrice%><span class="old-price"></span>
                    <span class="product-offer-box"><%=product.productOffer%> %Offer</span>
                </div>

                <div class="quantity">
                    <button id="decrease-btn" onclick="updateQuantity(`<%= product._id %>`,-1)">-</button>
                    <span id="quantity">1</span>
                    <button id="increase-btn" onclick="updateQuantity(`<%= product._id %>`,1)">+</button>
                </div>
                <p id="stock-info">Stock left: <span id="stock-count"><%=quantity%></span></p>
               
                <button class="add-to-cart" ><a onclick="addToCartHandler(event, '<%= product._id %>')"  >Add to Cart</a></button>
               
            </div>
        </div>

        
                                
                           
    
    <div class="rp" >
        <h1>Related Product</h1>
        <%for(let i=0; i <recommendedProduct.length ; i++){%>
            
            <div class="col-lg-3 col-sm-6 mix all dresses bags">
                <div class="single-product-item">
                    <figure>
                        <a href="/productDetails?id=<%=recommendedProduct[i]?._id%>"><img src="/uploads/re-image/<%=recommendedProduct[i]?.productImage[0]%>" alt=""></a>
                        <div class="p-status">new</div>
                    </figure>
                    <div class="product-text">
                        <h6><%=recommendedProduct[i].productName%></h6>
                        <p><%=recommendedProduct[i].salePrice%></p>
                    </div>
                </div>
            </div>
            <%}%>
    </div>
</div>
    <script>
        function changeImage(thumbnail) {
            const mainImage = document.getElementById('mainImage');
            mainImage.src = thumbnail.src;
            mainImage.alt = thumbnail.alt;
            
            document.querySelectorAll('.thumbnail').forEach(thumb => {
                thumb.classList.remove('active');
            });
            thumbnail.classList.add('active');
        }


        function addToCart() {
            const quantity = document.getElementById('quantity').textContent;
        }

        function zoomImage(e) {
            const image = e.target;
            const zoomer = e.currentTarget;
            const x = e.offsetX / zoomer.offsetWidth;
            const y = e.offsetY / zoomer.offsetHeight;
            const zoomLevel = 2;
            image.style.transformOrigin = `${x * 100}% ${y * 100}%`;
            image.style.transform = `scale(${zoomLevel})`;
        }

        function resetZoom(e) {
            console.log("mouse leaved");
            
            const image = e.target;
            image.style.transformOrigin = 'center center';
            image.style.transform = 'scale(1)';
        }
    </script>
<%- include("../../views/partials/user/footer") %>

<script>
   function addToCartHandler(event, productId) {
    event.preventDefault();

    const quantity = parseInt(document.getElementById('quantity').textContent, 10);
    if (isNaN(quantity) || quantity <= 0) {
        return Swal.fire({
            title: 'Invalid Quantity',
            text: 'Please select a valid quantity.',
            icon: 'warning',
            confirmButtonText: 'OK'
        });
    }

    fetch('/addToCart', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, quantity })
    })
        .then(response => {
            if (!response.ok) {
                return response.json().then(data => {
                    throw new Error(data.message || 'Failed to add product to cart');
                });
            }
            return response.json();
        })
        .then(data => {
            if (data.success) {
                Swal.fire({
                    title: 'Success!',
                    text: data.message || 'Product added to cart successfully!',
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    if (data.cartCount !== undefined) {
                        updateCartCount(data.cartCount);
                    }
                    if (data.redirect) {
                        window.location.href = data.redirect;
                    }
                });
            } else {
                throw new Error(data.message || 'Failed to add product to cart');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            if (error.message.includes('Please login')) {
                Swal.fire({
                    title: 'Login Required',
                    text: 'Please login to add items to your cart',
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonText: 'Login',
                    cancelButtonText: 'Cancel'
                }).then(result => {
                    if (result.isConfirmed) {
                        window.location.href = '/login';
                    }
                });
            } else if (error.message.includes('Maximum quantity')) {
                Swal.fire({
                    title: 'Quantity Limit Reached',
                    text: error.message,
                    icon: 'warning',
                    confirmButtonText: 'OK'
                });
            } else if (error.message.includes('out of stock') || error.message.includes('available in stock')) {
                Swal.fire({
                    title: 'Stock Limited',
                    text: error.message,
                    icon: 'warning',
                    confirmButtonText: 'OK'
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: error.message || 'Something went wrong. Please try again.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        });
}


async function updateQuantity(productId, change){
    const quantityElement = document.getElementById(`quantity`);
    const newQuantity = parseInt(quantityElement.innerHTML) + change;
    if(newQuantity >= 1 && newQuantity <= 5 && newQuantity <= `<%=quantity%>`){
        quantityElement.innerHTML = newQuantity
    }else if(newQuantity < 1){
        Swal.fire({
                title: 'Minimum quantity reached',
                confirmButtonText: 'OK'
            });
    }else if(newQuantity>5){
        Swal.fire({
                title: 'Maximum quantity reached',
                confirmButtonText: 'OK'
            });
    }else if(newQuantity>=` <%=quantity%>`){
        Swal.fire({
                title: 'maximun quantity reached',
              
                confirmButtonText: 'OK'
            });
    }
}

  
  function addToWishlist(productId) {
  
    $.ajax({
      url: "/addToWishlist", 
      method: "POST",
      data: { productId: productId },
      success: (response) => {
        if (response.status) {
          Swal.fire({
            title: "Added to wishlist",
            text: "The product has been added to your wishlist.",
            icon: "success",
            timer: 2000,
          });
        } else {
          Swal.fire({
            title: "Already in wishlist",
            text: response.message || "This product is already in your wishlist.",
            icon: "info",
            timer: 2000,
          });
        }
      },
      error: (xhr, status, error) => {
  
        console.error("AJAX Error: ", error, xhr.responseText);
        Swal.fire({
          title: "Error",
          text: "There was an error adding the product to your wishlist. Please try again.",
          icon: "error",
          timer: 2000,
        });
      },
    });
  }
    const productOffer = `<%= product.productOffer %>`;
    const categoryOffer = `<%= category.categoryOffer %>`;

    const higherOffer = Math.max(productOffer, categoryOffer);

    const offerDisplay = document.getElementById('offer-display');
    offerDisplay.textContent = `${higherOffer} %Offer`;

    offerDisplay.classList.add(higherOffer === productOffer ? 'product-offer-box' : 'product-offer-box-two');

</script>