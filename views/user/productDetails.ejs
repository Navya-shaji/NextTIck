<%- include('../partials/user/header') %>

<style>
    .breadcrumb {
        background: #f8f9fa;
        padding: 15px 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        margin-bottom: 30px;
    }
    .breadcrumb-item a {
        color: #333;
        text-decoration: none;
        transition: color 0.3s;
    }
    .breadcrumb-item a:hover {
        color: #ff4e00;
    }
    .breadcrumb-item.active {
        color: #ff4e00;
        font-weight: 500;
    }
    .price-section {
        background: #f9f9f9;
        padding: 20px;
        border-radius: 8px;
        margin: 20px 0;
    }
    .current-price {
        font-size: 28px;
        font-weight: 600;
        color: #ff4e00;
    }
    .original-price {
        font-size: 18px;
        color: #999;
        text-decoration: line-through;
    }
    .discount-badge {
        background: #28a745;
        color: white;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 14px;
        font-weight: 500;
    }
    .stock-status {
        padding: 8px 15px;
        border-radius: 4px;
        font-weight: 500;
        display: inline-block;
        margin: 10px 0;
    }
    .in-stock {
        background: #e8f5e9;
        color: #2e7d32;
    }
    .low-stock {
        background: #fff3e0;
        color: #ef6c00;
    }
    .out-stock {
        background: #ffebee;
        color: #c62828;
    }
    .btn-custom {
        padding: 12px 25px;
        border-radius: 6px;
        font-weight: 500;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 14px;
    }
    .btn-cart {
        background: #0f3460;
        border: none;
        color: white;
        box-shadow: 0 2px 4px rgba(15, 52, 96, 0.2);
    }
    .btn-cart:hover {
        background: #16478c;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(15, 52, 96, 0.3);
    }
    .btn-cart:disabled {
        background: #ccc;
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
    }
    .btn-wishlist {
        background: white;
        border: 2px solid #0f3460;
        color: #0f3460;
    }
    .btn-wishlist:hover {
        background: #0f3460;
        color: white;
    }
    .quantity-selector {
        display: flex;
        align-items: center;
        gap: 15px;
        margin-bottom: 25px;
        background: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
    }
    .quantity-selector label {
        font-weight: 600;
        color: #0f3460;
        margin-bottom: 0;
        font-size: 15px;
    }
    .quantity-controls {
        display: flex;
        align-items: center;
        border: 2px solid #0f3460;
        border-radius: 6px;
        overflow: hidden;
        background: white;
    }
    .quantity-btn {
        background: #0f3460;
        border: none;
        padding: 10px 20px;
        color: white;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.3s;
    }
    .quantity-btn:hover {
        background: #16478c;
    }
    .quantity-btn:disabled {
        background: #ccc;
        cursor: not-allowed;
    }
    .quantity-input {
        width: 70px;
        text-align: center;
        border: none;
        border-left: 2px solid #0f3460;
        border-right: 2px solid #0f3460;
        padding: 10px;
        font-weight: 600;
        font-size: 16px;
        color: #0f3460;
    }
    .quantity-input::-webkit-inner-spin-button,
    .quantity-input::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
    .action-buttons {
        display: flex;
        gap: 15px;
    }
    .action-buttons .btn {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }
    .main-image-container {
        position: relative;
        overflow: hidden;
        border-radius: 12px;
        cursor: none;
        background: #fff;
        margin-bottom: 20px;
        max-height: 600px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    }
    .main-image {
        width: 100%;
        height: auto;
        transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        object-fit: contain;
    }
    .magnifying-glass {
        position: absolute;
        width: 180px;
        height: 180px;
        border-radius: 50%;
        pointer-events: none;
        opacity: 0;
        transform: scale(0.8);
        transition: opacity 0.3s, transform 0.3s;
        background-repeat: no-repeat;
        box-shadow: 
            0 0 0 2px rgba(255, 255, 255, 0.3),
            0 4px 15px rgba(0, 0, 0, 0.15),
            inset 0 0 15px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(4px);
        border: 1px solid rgba(255, 255, 255, 0.5);
    }
    .magnifying-glass::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border-radius: 50%;
        background: radial-gradient(
            circle at 30% 30%,
            rgba(255, 255, 255, 0.2) 0%,
            transparent 60%
        );
        pointer-events: none;
    }
    .magnifying-glass::after {
        content: '';
        position: absolute;
        top: -1px;
        left: -1px;
        right: -1px;
        bottom: -1px;
        border-radius: 50%;
        background: linear-gradient(
            135deg,
            rgba(255, 255, 255, 0.2) 0%,
            transparent 50%,
            rgba(0, 0, 0, 0.1) 100%
        );
        pointer-events: none;
    }
    .main-image-container:hover .magnifying-glass {
        opacity: 1;
        transform: scale(1);
    }
    .thumbnail-container {
        display: flex;
        gap: 12px;
        margin-top: 20px;
        padding: 10px;
        overflow-x: auto;
        scrollbar-width: thin;
        scroll-behavior: smooth;
    }
    .thumbnail {
        width: 80px;
        height: 80px;
        border-radius: 8px;
        cursor: pointer;
        border: 2px solid transparent;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        object-fit: cover;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }
    .thumbnail:hover {
        border-color: #0f3460;
        transform: translateY(-2px);
    }
    .thumbnail.active {
        border-color: #0f3460;
        transform: scale(1.05);
    }
    .product-title {
        font-size: 1.8rem;
        font-weight: 600;
        color: #333;
    }
    .product-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        transition: transform 0.3s, box-shadow 0.3s;
    }
    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    .product-image {
        aspect-ratio: 1;
        overflow: hidden;
    }
    .product-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    .product-info {
        background: white;
    }
    .product-name {
        font-size: 1rem;
        color: #333;
        margin-bottom: 0.5rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
    .product-price {
        color: #28a745;
        font-weight: 600;
    }
    .stock-info {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin: 20px 0;
        border-left: 4px solid;
    }
    .stock-info.in-stock {
        border-color: #28a745;
        background: #e8f5e9;
    }
    .stock-info.low-stock {
        border-color: #ffc107;
        background: #fff3e0;
    }
    .stock-info.out-of-stock {
        border-color: #dc3545;
        background: #ffebee;
    }
    .stock-info .stock-text {
        display: flex;
        align-items: center;
        gap: 10px;
        font-weight: 500;
        margin-bottom: 5px;
    }
    .stock-info.in-stock .stock-text {
        color: #1b5e20;
    }
    .stock-info.low-stock .stock-text {
        color: #e65100;
    }
    .stock-info.out-of-stock .stock-text {
        color: #b71c1c;
    }
    .stock-quantity {
        font-size: 14px;
        color: #666;
        display: flex;
        align-items: center;
        gap: 5px;
    }
    .quantity-bar {
        height: 6px;
        background: #e0e0e0;
        border-radius: 3px;
        overflow: hidden;
        margin-top: 8px;
    }
    .quantity-bar-fill {
        height: 100%;
        border-radius: 3px;
        transition: width 0.3s ease;
    }
    .quantity-bar-fill.high {
        background: #28a745;
    }
    .quantity-bar-fill.medium {
        background: #ffc107;
    }
    .quantity-bar-fill.low {
        background: #dc3545;
    }
    .stock-quantity-display {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
        border-left: 4px solid #0f3460;
    }
    .stock-quantity-display .title {
        font-weight: 600;
        color: #0f3460;
        margin-bottom: 10px;
        display: flex;
        align-items: center;
        gap: 8px;
    }
    .stock-status-badge {
        display: inline-flex;
        align-items: center;
        gap: 5px;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 14px;
        font-weight: 500;
    }
    .stock-status-badge.in-stock {
        background: #e8f5e9;
        color: #2e7d32;
    }
    .stock-status-badge.low-stock {
        background: #fff3e0;
        color: #ef6c00;
    }
    .stock-status-badge.out-stock {
        background: #ffebee;
        color: #c62828;
    }
    .quantity-controls {
        display: inline-flex;
        align-items: center;
        border: 2px solid #0f3460;
        border-radius: 6px;
        background: white;
        margin-top: 10px;
    }
    .quantity-btn {
        background: #0f3460;
        border: none;
        width: 40px;
        height: 40px;
        color: white;
        font-size: 16px;
        cursor: pointer;
        transition: all 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .quantity-btn:hover:not(:disabled) {
        background: #16478c;
    }
    .quantity-btn:disabled {
        background: #ccc;
        cursor: not-allowed;
    }
    .quantity-input {
        width: 60px;
        text-align: center;
        font-size: 16px;
        font-weight: 600;
        border: none;
        color: #0f3460;
        padding: 8px;
        -moz-appearance: textfield;
    }
    .quantity-input::-webkit-inner-spin-button,
    .quantity-input::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
    @media (max-width: 768px) {
        .product-title {
            font-size: 1.5rem;
        }
        .thumbnail {
            width: 60px;
            height: 60px;
        }
        .main-image-container {
            max-height: 450px;
            cursor: grab;
        }
        .main-image.zoomed {
            cursor: grabbing;
        }
        .magnifying-glass {
            display: none;
        }
    }

    .price-section {
        margin: 20px 0;
        padding: 15px;
        background: #f8f9fa;
        border-radius: 8px;
    }
    .price-section .regular-price {
        color: #666;
        text-decoration: line-through;
        font-size: 1.1rem;
        margin-right: 10px;
    }
    .price-section .sales-price {
        color: #0f3460;
        font-size: 1.8rem;
        font-weight: 600;
    }
    .offer-badge {
        display: inline-block;
        background: #28a745;
        color: white;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.9rem;
        font-weight: 500;
        margin-left: 10px;
        vertical-align: middle;
    }
    .category-offer {
        background: #0f3460;
    }
    .product-offer {
        background: #28a745;
    }
    .best-offer {
        font-size: 0.85rem;
        color: #666;
        margin-top: 5px;
    }
    .best-offer i {
        color: #28a745;
        margin-right: 5px;
    }

    .action-buttons {
        display: flex;
        gap: 15px;
        margin-top: 20px;
    }

    .quantity-control {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 20px;
        background: #f8f9fa;
        padding: 10px;
        border-radius: 8px;
    }

    .quantity-btn {
        background: #0f3460;
        color: white;
        border: none;
        width: 36px;
        height: 36px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background-color 0.3s;
    }

    .quantity-btn:hover {
        background: #16478c;
    }

    .quantity-btn:disabled {
        background: #ccc;
        cursor: not-allowed;
    }

    .quantity-input {
        width: 60px;
        text-align: center;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 8px;
    }

    .add-to-cart-btn, 
    .add-to-wishlist-btn {
        flex: 1;
        padding: 12px 24px;
        border: none;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
    }

    .add-to-cart-btn {
        background: #0f3460;
        color: white;
    }

    .add-to-cart-btn:hover {
        background: #16478c;
        transform: translateY(-2px);
    }

    .add-to-wishlist-btn {
        background: #f8f9fa;
        color: #0f3460;
        border: 2px solid #0f3460;
    }

    .add-to-wishlist-btn:hover {
        background: #0f3460;
        color: white;
        transform: translateY(-2px);
    }

    .btn-icon {
        font-size: 18px;
    }
</style>

<div class="container my-5">
    <!-- Breadcrumb at the top -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/"><i class="fas fa-home"></i> Home</a></li>
            <li class="breadcrumb-item"><a href="/shop">Shop</a></li>
            <% if (product.category) { %>
                <li class="breadcrumb-item"><a href="/shop?category=<%= product.category._id %>"><%= product.category.name %></a></li>
            <% } %>
            <li class="breadcrumb-item active" aria-current="page"><%= product.productName %></li>
        </ol>
    </nav>

    <div class="row">
        <!-- Product Images Section -->
        <div class="col-md-6 mb-4">
            <div class="main-image-container" id="imageContainer">
                <img src="/uploads/re-image/<%= product.productImage[0] %>" 
                     alt="<%= product.productName %>" 
                     class="main-image" 
                     id="mainImage">
                <div class="magnifying-glass" id="magnifyingGlass"></div>
            </div>
            
            <% if (product.productImage.length > 1) { %>
                <div class="thumbnail-container mt-3">
                    <% product.productImage.forEach((image, index) => { %>
                        <img src="/uploads/re-image/<%= image %>" 
                             alt="Product thumbnail <%= index + 1 %>" 
                             class="thumbnail <%= index === 0 ? 'active' : '' %>"
                             onclick="changeImage('/uploads/re-image/<%= image %>', this)">
                    <% }); %>
                </div>
            <% } %>
        </div>

        <!-- Product Info Section -->
        <div class="col-md-6">
            <h1 class="product-title mb-4"><%= product.productName %></h1>
            
            <!-- Price Section -->
            <div class="price-section">
                <% 
                    // Calculate offers
                    const productOffer = product.productOffer || 0;
                    const categoryOffer = category?.categoryOffer || 0;
                    
                    // Get the best offer
                    const bestOffer = totalOffer || Math.max(productOffer, categoryOffer);
                    
                    // Calculate prices
                    const regularPrice = product.salesPrice || 0;
                    const discountAmount = regularPrice * (bestOffer / 100);
                    const salesPrice = regularPrice - discountAmount;
                    
                    // Calculate discount percentage
                    const discount = bestOffer;
                    
                    // Format prices with ₹ symbol
                    const formattedRegularPrice = `₹${regularPrice.toFixed(2)}`;
                    const formattedSalesPrice = `₹${salesPrice.toFixed(2)}`;
                %>
                
                <div class="d-flex align-items-center flex-wrap">
                    <% if (bestOffer > 0) { %>
                        <span class="regular-price"><%= formattedRegularPrice %></span>
                    <% } %>
                    <span class="sales-price"><%= formattedSalesPrice %></span>
                    
                    <% if (bestOffer > 0) { %>
                        <span class="offer-badge">
                            <i class="fas fa-tag"></i>
                            <%= discount %>% OFF
                        </span>
                    <% } %>
                </div>
                
                <% if (bestOffer > 0) { %>
                    <div class="best-offer">
                        <i class="fas fa-check-circle"></i>
                        Best offer applied: 
                        <% if (productOffer > categoryOffer) { %>
                            <span class="offer-badge product-offer">
                                <i class="fas fa-percentage"></i>
                                <%= productOffer %>% Product Offer
                            </span>
                        <% } else if (categoryOffer > 0) { %>
                            <span class="offer-badge category-offer">
                                <i class="fas fa-percentage"></i>
                                <%= categoryOffer %>% Category Offer
                            </span>
                        <% } %>
                    </div>
                <% } %>
                
                <% if (availableCoupons && availableCoupons.length > 0) { %>
                    <div class="mt-2">
                        <small class="text-success">
                            <i class="fas fa-ticket-alt"></i>
                            Additional coupons available
                        </small>
                    </div>
                <% } %>
            </div>

            <div class="stock-quantity-display">
                <div class="title">
                    <i class="fas fa-box"></i> Stock Status
                </div>
                
                <% if (product.quantity > 10) { %>
                    <span class="stock-status-badge in-stock">
                        <i class="fas fa-check-circle"></i>
                        <%= product.quantity %> units in stock
                    </span>
                <% } else if (product.quantity > 0) { %>
                    <span class="stock-status-badge low-stock">
                        <i class="fas fa-exclamation-circle"></i>
                        Only <%= product.quantity %> units left
                    </span>
                <% } else { %>
                    <span class="stock-status-badge out-stock">
                        <i class="fas fa-times-circle"></i>
                        Out of Stock
                    </span>
                <% } %>

                <% if (product.quantity > 0) { %>
                    <div class="quantity-control">
                        <button class="quantity-btn" onclick="updateQuantity(-1)" <%= product.quantity <= 1 ? 'disabled' : '' %>>-</button>
                        <input type="number" id="quantity" class="quantity-input" value="1" min="1" max="<%= Math.min(5, product.quantity) %>" readonly>
                        <button class="quantity-btn" onclick="updateQuantity(1)" <%= product.quantity <= 1 ? 'disabled' : '' %>>+</button>
                    </div>
                <% } %>
            </div>

            <!-- Description -->
            <div class="product-description mb-4">
                <h5 class="mb-3">Description</h5>
                <p class="text-muted"><%= product.description %></p>
            </div>

            <!-- Action Buttons -->
            <div class="action-buttons">
                <button onclick="addToCart('<%= product._id %>')" 
                        class="add-to-cart-btn"
                        <%= product.quantity === 0 ? 'disabled' : '' %>>
                    <i class="fas fa-shopping-cart btn-icon"></i>
                    <span>Add to Cart</span>
                </button>
                <button onclick="addToWishlist('<%= product._id %>')" 
                        id="wishlistBtn"
                        class="add-to-wishlist-btn">
                    <i class="fas fa-heart btn-icon"></i>
                    <span>Add to Wishlist</span>
                </button>
            </div>
        </div>
    </div>

    <!-- Related Products Section -->
    <% if (relatedProducts && relatedProducts.length > 0) { %>
        <div class="related-products mt-5">
            <h3 class="section-title mb-4">Related Products</h3>
            <div class="row">
                <% relatedProducts.forEach(related => { %>
                    <div class="col-md-3 col-6 mb-4">
                        <div class="product-card">
                            <a href="/productDetails?id=<%= related._id %>" class="text-decoration-none">
                                <div class="product-image">
                                    <img src="/uploads/re-image/<%= related.productImage[0] %>" alt="<%= related.productName %>" class="img-fluid">
                                </div>
                                <div class="product-info p-3">
                                    <h5 class="product-name"><%= related.productName %></h5>
                                    <div class="product-price">₹<%= related.salesPrice %></div>
                                </div>
                            </a>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>
    <% } %>
</div>

<!-- Scripts -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    const container = document.getElementById('imageContainer');
    const mainImage = document.getElementById('mainImage');
    const magnifyingGlass = document.getElementById('magnifyingGlass');
    
    let isZoomed = false;
    let zoomLevel = 2.5;
    let touchStartX = 0;
    let touchStartY = 0;
    let lastTapTime = 0;
    
    const isMobile = window.innerWidth <= 768;
    
    if (!isMobile) {
        // Desktop zoom functionality
        container.addEventListener('mousemove', (e) => {
            const rect = container.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;
            
            const glassSize = 180; // Magnifying glass size
            const glassRadius = glassSize / 2;
            
            // Position the magnifying glass
            magnifyingGlass.style.left = `${x - glassRadius}px`;
            magnifyingGlass.style.top = `${y - glassRadius}px`;
            
            // Calculate zoom background position
            const zoomX = (x / rect.width) * 100;
            const zoomY = (y / rect.height) * 100;
            
            magnifyingGlass.style.backgroundImage = `url(${mainImage.src})`;
            magnifyingGlass.style.backgroundSize = `${rect.width * zoomLevel}px ${rect.height * zoomLevel}px`;
            magnifyingGlass.style.backgroundPosition = `-${(x * zoomLevel) - glassRadius}px -${(y * zoomLevel) - glassRadius}px`;
        });
        
        container.addEventListener('mouseleave', () => {
            magnifyingGlass.style.opacity = '0';
            magnifyingGlass.style.transform = 'scale(0.8)';
        });
        
        container.addEventListener('mouseenter', () => {
            magnifyingGlass.style.opacity = '1';
            magnifyingGlass.style.transform = 'scale(1)';
        });
    } else {
        // Mobile zoom functionality
        let initialPinchDistance = 0;
        let currentZoomLevel = 1;
        let panStartX = 0;
        let panStartY = 0;
        
        container.addEventListener('touchstart', (e) => {
            if (e.touches.length === 2) {
                e.preventDefault();
                initialPinchDistance = getPinchDistance(e.touches);
            } else {
                const currentTime = new Date().getTime();
                const tapLength = currentTime - lastTapTime;
                
                if (tapLength < 300 && tapLength > 0) {
                    // Double tap detected
                    e.preventDefault();
                    if (!isZoomed) {
                        currentZoomLevel = 2.5;
                        mainImage.style.transform = `scale(${currentZoomLevel})`;
                        isZoomed = true;
                    } else {
                        currentZoomLevel = 1;
                        mainImage.style.transform = 'scale(1)';
                        isZoomed = false;
                    }
                }
                
                lastTapTime = currentTime;
                panStartX = e.touches[0].clientX;
                panStartY = e.touches[0].clientY;
            }
        });
        
        container.addEventListener('touchmove', (e) => {
            if (e.touches.length === 2) {
                e.preventDefault();
                const currentDistance = getPinchDistance(e.touches);
                const pinchScale = currentDistance / initialPinchDistance;
                currentZoomLevel = Math.min(Math.max(1, pinchScale * 2), 3);
                
                mainImage.style.transform = `scale(${currentZoomLevel})`;
            } else if (isZoomed) {
                const deltaX = (e.touches[0].clientX - panStartX) * 0.5;
                const deltaY = (e.touches[0].clientY - panStartY) * 0.5;
                
                mainImage.style.transform = `translate(${deltaX}px, ${deltaY}px) scale(${currentZoomLevel})`;
            }
        });
    }
    
    function getPinchDistance(touches) {
        return Math.hypot(
            touches[0].clientX - touches[1].clientX,
            touches[0].clientY - touches[1].clientY
        );
    }
    
    // Enhanced thumbnail functionality with proper image path handling
    function changeImage(src, thumbnail) {
        // Store current transform state
        const currentTransform = mainImage.style.transform;
        
        // Start transition
        mainImage.style.opacity = '0';
        mainImage.style.transform = 'scale(0.95)';
        
        setTimeout(() => {
            // Update image source
            mainImage.src = src;
            
            // Update magnifying glass
            if (magnifyingGlass) {
                magnifyingGlass.style.backgroundImage = `url(${src})`;
            }
            
            // Restore visibility with animation
            mainImage.style.opacity = '1';
            mainImage.style.transform = isZoomed ? currentTransform : 'scale(1)';
            
            // Update thumbnails
            document.querySelectorAll('.thumbnail').forEach(thumb => {
                thumb.classList.remove('active');
            });
            thumbnail.classList.add('active');
            
            if (isZoomed) {
                mainImage.style.transform = 'scale(1)';
                isZoomed = false;
            }
        }, 300);
    }
</script>

<script>
    let isAddingToCart = false;
    let isAddingToWishlist = false;

    async function addToCart(productId) {
        if (isAddingToCart) return; // Prevent multiple clicks
        isAddingToCart = true;

        try {
            const quantity = document.getElementById('quantity').value;
            const response = await fetch('/addToCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId, quantity })
            });

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            const data = await response.json();

            if (data.success) {
                if (data.status === 'already_in_cart') {
                    Swal.fire({
                        icon: 'info',
                        title: 'Already in Cart',
                        text: 'This item is already in your cart. You can adjust the quantity in the cart.',
                        confirmButtonColor: '#0f3460'
                    });
                } else {
                    Swal.fire({
                        icon: 'success',
                        title: 'Added to Cart!',
                        text: 'Product has been added to your cart successfully.',
                        confirmButtonColor: '#0f3460'
                    });
                }
            } else if (data.redirect) {
                window.location.href = data.redirect;
            } else {
                throw new Error(data.message || 'Failed to add to cart');
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: error.message || 'Something went wrong!',
                confirmButtonColor: '#0f3460'
            });
        } finally {
            isAddingToCart = false;
        }
    }

    async function addToWishlist(productId) {
        if (isAddingToWishlist) return; // Prevent multiple clicks
        isAddingToWishlist = true;

        try {
            const response = await fetch('/addToWishlist', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId })
            });

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            const data = await response.json();

            if (data.success) {
                if (data.status === 'already_in_wishlist') {
                    Swal.fire({
                        icon: 'info',
                        title: 'Already in Wishlist',
                        text: 'This item is already in your wishlist.',
                        confirmButtonColor: '#0f3460'
                    });
                } else {
                    Swal.fire({
                        icon: 'success',
                        title: 'Added to Wishlist!',
                        text: 'Product has been added to your wishlist successfully.',
                        confirmButtonColor: '#0f3460'
                    });
                }
            } else if (data.redirect) {
                window.location.href = data.redirect;
            } else {
                throw new Error(data.message || 'Failed to add to wishlist');
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: error.message || 'Something went wrong!',
                confirmButtonColor: '#0f3460'
            });
        } finally {
            isAddingToWishlist = false;
        }
    }

    function updateQuantity(change) {
        const input = document.getElementById('quantity');
        const currentValue = parseInt(input.value);
        const maxQuantity = Math.min(5, <%= product.quantity %>);
        
        let newValue = currentValue + change;
        newValue = Math.max(1, Math.min(newValue, maxQuantity));
        
        input.value = newValue;
        
        const minusBtn = input.previousElementSibling;
        const plusBtn = input.nextElementSibling;
        
        minusBtn.disabled = newValue === 1;
        plusBtn.disabled = newValue === maxQuantity;
    }
</script>

<style>
    .main-image {
        opacity: 1;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    /* Custom scrollbar for thumbnail container */
    .thumbnail-container::-webkit-scrollbar {
        height: 6px;
    }
    
    .thumbnail-container::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 3px;
    }
    
    .thumbnail-container::-webkit-scrollbar-thumb {
        background: #0f3460;
        border-radius: 3px;
    }
    
    .thumbnail-container::-webkit-scrollbar-thumb:hover {
        background: #16478c;
    }
</style>

<%- include('../partials/user/footer') %>