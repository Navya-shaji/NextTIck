<%- include("../../views/partials/admin/header") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <link rel="stylesheet" href="/styles/category.css">
  <style>
    
  </style>
</head>
<body>
  <section class="content-main">
    <div class="content-header">
      <h2 class="content-title card-title">Category</h2>
    </div>

    <!-- Search Form -->
    <header class="card-header text-center mb-4">
      <form action="/admin/category" method="GET" class="d-inline">
        <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="max-width: 500px; margin: auto;">
          <input
            type="text"
            class="form-control border-0 rounded-pill"
            placeholder="Search categories"
            name="search"
            required
          />
          <button class="btn btn-primary rounded-pill" type="submit">Search</button>
        </div>
      </form>
    </header>

    <!-- Content -->
   
                <div class="row">
                    <div class="col-md-3">
                        <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Name</label>
                                <input type="text" placeholder="Type here" class="form-control" name="name" id="product_name" />
                                <div id="name-error" class="error-message" style="display: none; color: red;"></div>
                            </div>
                            
                            <div class="mb-4">
                                <label class="form-label">Description</label>
                                <textarea id="descriptionId" placeholder="Type here" class="form-control" name="description"></textarea>
                                <div id="description-error" class="error-message" style="display: none; color: red;"></div>
                            </div>
                            
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary">Create category</button>
                            </div>
                        </form>
                    </div>

          <!-- Category Table -->
          <div class="col-md-9">
            <div class="table-responsive">
              <table class="table table-striped table-hover">
                <thead>
                  <tr class="text-center">
                    <th>#</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer Actions</th>
                    <th>Status</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% if (cat && cat.length > 0) { %>
                    <% cat.reverse().forEach((category, index) => { %>
                      <tr class="align-middle">
                        <td class="text-center"><%= index + 1 %></td>
                        <td><%= category.name %></td>
                        <td><%= category.description %></td>
                        <td class="text-center"><%= category.categoryOffer || '0%' %></td>
                        <td class="text-center">
                          <% if (!category.categoryOffer) { %>
                            <button class="btn btn-info btn-sm" onclick="addOffer('<%= category._id %>')">Add Offer</button>
                          <% } else { %>
                            <button class="btn btn-danger btn-sm" onclick="removeOffer('<%= category._id %>')">Remove Offer</button>
                          <% } %>
                        </td>
                        <td class="text-center">
                          <% if (category.isListed) { %>
                            <span class="badge bg-success">Listed</span>
                          <% } else { %>
                            <span class="badge bg-danger">Unlisted</span>
                          <% } %>
                        </td>
                        <td class="text-center">
                          <% if (category.isListed) { %>
                            <a href="/admin/unlistCategory?id=<%= category._id %>" class="btn btn-danger btn-sm text-white">Unlist</a>
                          <% } else { %>
                            <a href="/admin/listCategory?id=<%= category._id %>" class="btn btn-success btn-sm text-white">List</a>
                          <% } %>
                          <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-info btn-sm text-white">Edit</a>
                        </td>
                      </tr>
                    <% }); %>
                  <% } else { %>
                    <tr>
                      <td colspan="7" class="text-center">No categories found</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Pagination -->
    <div class="pagination-container mt-4">
      <ul class="pagination justify-content-center">
        <% if (currentPage > 1) { %>
          <li class="page-item">
            <a class="page-link" href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
          </li>
        <% } %>
        <% for (let i = 1; i <= totalPages; i++) { %>
          <li class="page-item <%= i === currentPage ? 'active' : '' %>">
            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
          </li>
        <% } %>
        <% if (currentPage < totalPages) { %>
          <li class="page-item">
            <a class="page-link" href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
          </li>
        <% } %>
      </ul>
    </div>
  </section>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

 
  <script>
   function handleFormSubmit(event) {
    event.preventDefault();
    
    if (!validateForm()) {
        return;
    }

    const name = document.getElementsByName('name')[0].value;
    const description = document.getElementById('descriptionId').value;


    return fetch('/admin/addCategory', {
        method: 'post',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ name, description })
    })
    .then(response => {
        
        if (!response.ok) {
            return response.json().then(err => {
                throw new Error(err.error);
            });
        }
        
        return response.json();
    })
    .then(data => {

        Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'Category added successfully!',
            showConfirmButton: false,
            timer: 2000 
        }).then(() => {
            location.reload(); 
        });
    })
    .catch(error => {

        if (error.message === 'Category already exists') {
            Swal.fire({
                icon: 'error',
                title: 'Oops',
                text: 'Category already exists'
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Oops',
                text: 'An error occurred while adding the category'
            });
        }
    });
}



async function addOffer(categoryId) {

const { value: amount } = await Swal.fire({
    title: "Offer in Percentage",
    input: "number",
    inputLabel: "Percentage",
    inputPlaceholder: "%",
    inputAttributes: {
        min: 0,
        max: 100,
        step: 1
    }
});

if (amount) {
    if (amount < 0 || amount > 100 || isNaN(amount)) {
        Swal.fire("Invalid Input", "Please enter a valid percentage between 0 and 100", "error");
        return;
    }

    try {
        Swal.fire({
            title: "Adding Offer...",
            text: "Please wait while the offer is being added",
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            },
        });

        const response = await fetch("/admin/addCategoryOffer", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                percentage: amount,
                categoryId: categoryId,
            }),
        });

        const data = await response.json();

        Swal.close(); 

        if (response.ok && data.status === true) {
            Swal.fire("Offer Added", "The offer has been added successfully", "success").then(() => {
                location.reload();
            });
        } else {
            Swal.fire("Failed", data.message || "Adding offer failed", "error");
        }
    } catch (error) {
        Swal.fire(
            "Error",
            "An error occurred while adding the offer. Please try again.",
            "error"
        );
        console.error("Error adding offer:", error);
    }
}
}


async function removeOffer(categoryId) {
const confirm = await Swal.fire({
    title: "Remove Offer",
    text: "Are you sure you want to remove the offer from this category?",
    icon: "warning",
    showCancelButton: true,
    confirmButtonText: "Yes, Remove",
    cancelButtonText: "Cancel",
});

if (confirm.isConfirmed) {
    try {
        Swal.fire({
            title: "Removing Offer...",
            text: "Please wait while the offer is being removed",
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            },
        });

        const response = await fetch("/admin/removeCategoryOffer", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                categoryId: categoryId,
            }),
        });

        const data = await response.json();

        Swal.close();

        if (response.ok && data.status === true) {
            Swal.fire("Offer Removed", "The offer has been successfully removed", "success").then(() => {
                location.reload();
            });
        } else {
            Swal.fire("Failed", data.message || "Removing offer failed", "error");
        }
    } catch (error) {
        Swal.fire(
            "Error",
            "An error occurred while removing the offer. Please try again.",
            "error"
        );
        console.error("Error removing offer:", error);
    }
}
}


//validation...............................................................................

    function validateForm() {
        clearErrorMessages();
        const name = document.getElementsByName('name')[0].value.trim();
        const description = document.getElementById('descriptionId').value.trim();
        let isValid = true;

        if (name === '') {
            displayErrorMessage('name-error', 'Please enter a name');
            isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(name)) {
            displayErrorMessage('name-error', 'Only alphabets are allowed');
            isValid = false;
        }
        if (description === '') {
            displayErrorMessage('description-error', 'Please enter a description');
            isValid = false;
        }
        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId); 
        errorElement.innerText = message;
        errorElement.style.display = 'block';
    }

    function clearErrorMessages() {
        const errorElements = document.querySelectorAll('.error-message'); 
        errorElements.forEach((element) => {
            element.innerText = '';
            element.style.display = 'none';
        });
    }



    function clearErrorMessage() {

        const errorElements = document.getElementsByClassName("error-message");
        Array.from(errorElements).forEach(element => {
            element.innerText = "";
            element.style.display = "none";
        });
    }



    </script>


<%- include("../../views/partials/admin/footer") %>
